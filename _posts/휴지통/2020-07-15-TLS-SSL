---
title:  "[Computer Network] SSL & TLS"
excerpt: "[Computer Network] SSL & TLS 정리"
toc: true
toc_sticky: true
categories:
  - cs
tags:
  - Computer Network
---

# 📝SST & TLS

`"SSL(TLS)은 컴퓨터 네트워크에 통신 보안을 제공하는 계층이다. 인증기관, 인증서, 공개키, 대칭키 암호화 등을 통해 보안 통신을 가능하게 해준다."`



## 📌 설명

* SSL(TLS)은 컴퓨터 네트워크에 통신 보안을 제공하는 계층이다.
* TLS는 SSL이 표준화 되면서 새롭게 바뀐 이름이다.
* 인증 기관(Certificate Authority, CA)을 통해 SSL 인증서를 발급 받고, 인증서를 통해 서버와 클라이언트를 인증한다.



## 📌 대칭키 암호화 (symmetric-key algorithm)

![](../../../assets/images/2020-07-15-11-42-26.png)

* 하나의 대칭키로 암호화, 복호화를  한다.



## 📌 공개키 암호화 (public key cryptosystem, 비대칭키 암호화)
![](../../../assets/images/2020-07-15-11-42-53.png)

* 암호화, 복호화를 하는 키가 다르다.
* 공개키로 암호화
  * 공캐키로 암호화하면, 개인키로만 복호화 가능하다.
* 개인키로 암호화
  * 개인키로 암호화하면, 공개키로 복호화 가능하다. 
  * 전자 서명 용도로 사용되는 경우다. 공개키를 가지는 누구나 전자 서명을 복호화할 수 있다. 



## 📌CA(Certificate Authority)

* 인증서를 발급하기 위한 공인된 기관이다.



## 📌 SSL 인증서

* 클라이언트와 서버의 통신을 제 3자가 보증화 해주는 전자 문서다.
* SSL에는 두 가지 정보가 들어있다.
  * 서비스의 정보(CA, 도메인 정보)
  * 서버측 공개키
* 인증서의 목표
  * 클라이언트가 접속한 서버가 신뢰할 수 있는 서버인지를 판단
  * SSL 통신에 사용될 공개키를 클라이언트에 전달.



## 📌 SSL Handshake

![](../../../assets/images/2020-07-15-12-08-10.png)

1. `client hello` : 클라이언트에서 SSL 버전 정보와 지원하는 암호화 방식, 무작위 바이트 문자열이 포함되어 전달된다. 
2. `server hello` :  지원하는 암호화 방식 중 서버에서 어떤 것을 사용할 지, 세션 ID, 서버측에서 생성한 무작위 바이트 문자열, SSL 인증서를 전송한다.
3. 클라이언트는 인증서를 받게 되면 CA로 부터받은 공개키로 인증서를 복호화하여 서버의 공개키를 획득한다. 그리고 클라이언트에서 만든 무작위 문자열과 서버에서 만든 무작위 문자열을 통해 대칭키를 생성한다. 
4. 생성한 대칭키를 인증서에 들어있던 서버의 공개키로 암호화 하고 서버로 전송한다.
5. 서버는 개인키로 암호화된 대칭키를 복호화하여 획득한다.
6. 클라이언트와 서버는 대칭키를 안전하게 나눠가졌다. 이후 대칭키 암호화를 통해 안전한 통신을 한다.




# **🕶 참조**

* https://hanjungv.github.io/2017-11-07-1_CS_SSL/
* https://www.youtube.com/watch?v=8R0FUF_t_zk

